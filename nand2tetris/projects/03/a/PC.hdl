// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    	
    	/* if reset[t] == 0 & load[t] == 1, out[t + 1] = in[t] */
	/* if reset[t] == 1, out[t + 1] = 0 */
	Not(in = reset, out = resetNeg);
	And(a = resetNeg, b = load, out = resetNegAndLoad);
	Mux16(a[0..15] = false, b = in, sel = resetNegAndLoad, out = out1);


	/* if reset[t] = 0, load[t] = 0 & inc[t] = 1, out[t + 1] = out[t] + 1 */
	Or(a = reset, b = load, out = resetOrLoad);
	Not(in = resetOrLoad, out = NotResetOrLoad);
	And(a = NotResetOrLoad, b = inc, out = set1);
	Inc16(in = outF, out = out2);
	Mux16(a = out1, b = out2, sel = set1, out = out3);

	/* If either of them one, update the output value */
	Or(a = resetOrLoad, b = inc, out = resetOrLoadOrInc);
	Register(in = out3, load = resetOrLoadOrInc, out = out, out = outF);

}
